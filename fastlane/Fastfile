# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.45.0"

default_platform :ios

# require_relative 'secrets'

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "print developer environment"
  lane :print_env do
    puts "******************************************"
    puts "THIS IS THE ENVIRONMENT: #{echo $NODE_ENV}"
    puts "THIS IS THE API KEY: #{ENV['API_KEY']}"
  end

  desc "builds project"
  lane :build do
    carthage
    gym(scheme: "ThoughtWords", workspace: "ThoughtWords.xcworkspace", export_method: "development")
  end

  desc "Clean builds and simulators"
  lane :clean do
    reset_simulators
    xcclean(scheme: "ThoughtWords")
    clean_build_artifacts
  end

  desc "Runs all the tests"
  lane :test do
    scan(scheme: "ThoughtWords", device: "iPhone 7")
  end

  desc "Submit a new Beta Build to HockeyApp"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym(
      workspace: "ThoughtWords.xcworkspace",
      configuration: "beta",
      scheme: "ThoughtWords",
      silent: true,
      clean: true,
      export_method: "development"
    )
    hockey(
      api_token: ENV['API_KEY'],
      public_identifier: ENV['PUBLIC_ID'],
      bundle_version: “1.0”,
      notify: "0"
    )
    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  # desc "Deploy a new version to the App Store"
  # lane :release do
  #   # match(type: "appstore")
  #   # snapshot
  #   gym(scheme: "ThoughtWords") # Build your app - more options available
  #   deliver(force: true)
  #   # frameit
  # end

  # You can define as many lanes as you want

#   after_all do |lane|
#     # This block is called, only if the executed lane was successful
#
#     # slack(
#     #   message: "Successfully deployed new App Update."
#     # )
#   end
#
#   error do |lane, exception|
#     # slack(
#     #   message: exception.message,
#     #   success: false
#     # )
#   end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
